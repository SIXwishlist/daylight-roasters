
//**************************************************
// LESS MIXINS (FUNCTIONS)
//**************************************************

// GENERAL CSS HELPERS
//----------------------------------------

// CSS gradients: http://css-tricks.com/css3-gradients/
.gradient(linear, top, @first, @second, @spread: 0) {
	// DIY FALLBACK
	@spread-dec: (@spread/100);
	background: -webkit-gradient(linear, left top, left bottom, from(@first), color-stop(@spread-dec, @first), to(@second));
	background: -webkit-linear-gradient(top, @first, @first ~"@{spread}%", @second);
	background: -moz-linear-gradient(top, @first, @first ~"@{spread}%", @second);
	background: -ms-linear-gradient(top, @first, @first ~"@{spread}%", @second);
	background: -o-linear-gradient(top, @first, @first ~"@{spread}%", @second);
	background: linear-gradient(top, @first, @first ~"@{spread}%", @second);
}
.gradient(linear, bottom, @first, @second, @spread: 0) {
	// DIY FALLBACK
	@spread-dec: (@spread/100);
	background: -webkit-gradient(linear, left bottom, left top, from(@first), to(@second));
	background: -webkit-linear-gradient(bottom, @first, @first ~"@{spread}%", @second);
	background: -moz-linear-gradient(bottom, @first, @first ~"@{spread}%", @second);
	background: -ms-linear-gradient(bottom, @first, @first ~"@{spread}%", @second);
	background: -o-linear-gradient(bottom, @first, @first ~"@{spread}%", @second);
	background: linear-gradient(bottom, @first, @first ~"@{spread}%", @second);
}
.gradient(linear, left, @first, @second, @spread: 0) {
	// DIY FALLBACK
	@spread-dec: (@spread/100);
	background: -webkit-gradient(linear, left top, right top, from(@first), color-stop(@spread-dec, @first), to(@second));
	background: -webkit-linear-gradient(left, @first, @first ~"@{spread}%", @second);
	background: -moz-linear-gradient(left, @first, @first ~"@{spread}%", @second);
	background: -ms-linear-gradient(left, @first, @first ~"@{spread}%", @second);
	background: -o-linear-gradient(left, @first, @first ~"@{spread}%", @second);
	background: linear-gradient(left, @first, @first ~"@{spread}%", @second);
}
.gradient(linear, right, @first, @second, @spread: 0) {
	// DIY FALLBACK
	@spread-dec: (@spread/100);
	background: -webkit-gradient(linear, right top, left top, from(@first), color-stop(@spread-dec, @first), to(@second));
	background: -webkit-linear-gradient(right, @first, @first ~"@{spread}%", @second);
	background: -moz-linear-gradient(right, @first, @first ~"@{spread}%", @second);
	background: -ms-linear-gradient(right, @first, @first ~"@{spread}%", @second);
	background: -o-linear-gradient(right, @first, @first ~"@{spread}%", @second);
	background: linear-gradient(right, @first, @first ~"@{spread}%", @second);
}
// CSS reflected gradient
.gradient(reflected, vert, @outer, @inner, @spread) {
	@spread-dec: (@spread/100);
	@spreadlast: (100-@spread);
	@spreadlast-dec: (@spreadlast/100);
	background: -webkit-gradient(linear, left top, left bottom, from(@outer), color-stop(@spread-dec, @inner), color-stop(0.5, @inner), color-stop(@spreadlast-dec, @inner), to(@outer));
	background: -webkit-linear-gradient(top, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -moz-linear-gradient(top, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -ms-linear-gradient(top, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -o-linear-gradient(top, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: linear-gradient(top, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
}
.gradient(reflected, horz, @outer, @inner, @spread) {
	@spreadlast: (100-@spread);
	@spread-dec: (@spread/100);
	@spreadlast-dec: (@spreadlast/100);
	background: -webkit-gradient(linear, left top, right top, from(@outer), color-stop(@spread-dec, @inner), color-stop(0.5, @inner), color-stop(@spreadlast-dec, @inner), to(@outer));
	background: -webkit-linear-gradient(left, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -moz-linear-gradient(left, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -ms-linear-gradient(left, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: -o-linear-gradient(left, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
	background: linear-gradient(left, @outer, @inner ~"@{spread}%", @inner, @inner ~"@{spreadlast}%", @outer);
}

// Box sizing: http://css-tricks.com/almanac/properties/b/box-sizing/
.box-sizing (@box:border-box) {box-sizing:@box;-moz-box-sizing:@box;-webkit-box-sizing:@box;-ms-box-sizing:@box;}

// Border radius: http://css-tricks.com/almanac/properties/b/border-radius/
.border-radius (@radius: 5px) {border-radius: @radius; -webkit-border-radius: @radius; } 

// Box shadow: http://css-tricks.com/almanac/properties/b/box-shadow/
.box-shadow (@shadow: 0 0 10px #aaa) {  box-shadow: @shadow; -webkit-box-shadow: @shadow; }
.box-shadow-multi (@shadow1: 0 0 10px #aaa, @shadow2) { box-shadow: @shadow1, @shadow2; -webkit-box-shadow: @shadow1, @shadow2; }

// Transform: http://css-tricks.com/almanac/properties/t/transform/
.transform (@string){transform: @string; -webkit-transform: @string; -ms-transform: @string; }
.rotate (@rotation){ 
	@degs: ~"@{rotation}deg";
	@degs-ie: (@rotation / 90);
	transform: rotate(@degs); -webkit-transform: rotate(@degs); -ms-transform: rotate(@degs); 
	.lt-ie9 & {filter: ~"progid:DXImageTransform.Microsoft.BasicImage(rotation=@{degs-ie})"; }
}
.perspective-origin (@value) { -webkit-perspective-origin: @value; -moz-perspective-origin: @value; -ms-perspective-origin: @value; perspective-origin: @value;  }
.perspective (@value) { -webkit-perspective: @value; -moz-perspective: @value; -ms-perspective: @value; perspective: @value; }
.transform-origin (@value) { -webkit-transform-origin: @value; -moz-transform-origin: @value; -ms-transform-origin: @value; transform-origin: @value; }

// Transition: http://css-tricks.com/almanac/properties/t/transition/
.transition (@transition: all 0.2s ease-in-out) { -webkit-transition: @transition; transition: @transition; }
.transition-prefixed (@selector: all, @speed: 0.2s, @easing: ease-in-out, @delay:0) {-webkit-transition: ~"-webkit-@{selector}" @speed @easing @delay; transition: @selector @speed @easing @delay; }
.transition-delay (@value) { -webkit-transition-delay: @value; transition-delay: @value; }
.transition-duration (@value) { -webkit-transition-duration: @value; transition-duration: @value; }
.transition-timing-function (@value) { -webkit-transition-timing-function: @value; transition-timing-function: @value; }

// Appearance: http://css-tricks.com/almanac/properties/a/appearance/
.appearance (@value) {-webkit-appearance:@value; -moz-appearance:@value; appearance:@value; }


// For using REM font-size values
.font-size (@sizeValue){
	@remValue: @sizeValue;
	@pxValue: (@sizeValue * 10);
	font-size: ~"@{pxValue}px"; 
	font-size: ~"@{remValue}rem";
}

.place_holder(@color){
	&::-webkit-input-placeholder { color: @color; }
	&:-moz-placeholder { color: @color; }
	&::-moz-placeholder { color: @color; }
	&:-ms-input-placeholder { color: @color; }
}

//  RETINA IMAGE HELPER
// ---------------------------------------- 
// retina.less
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)
.at2x (@path, @w: auto, @h: auto) {
	background-image: url(@path);
	@at2x_path: ~`"@{path}".split('.').slice(0, "@{path}".split('.').length - 1).join(".") + "@2x" + "." + "@{path}".split('.')["@{path}".split('.').length - 1]`;
	.no-lowbandwidth & {
		@media 
		only screen and (-webkit-min-device-pixel-ratio: 1.5),
		only screen and (   min--moz-device-pixel-ratio: 1.5),
		only screen and (   -min-moz-device-pixel-ratio: 1.5),
		only screen and (        min-device-pixel-ratio: 1.5),
		only screen and (                min-resolution: 192dpi),
		only screen and (                min-resolution: 1.5dppx) { 
			background-image: url(@at2x_path);
			background-size: @w @h;
		}
	}
}

.svg (@path) {
	background-image: url(@path);
	@pngpath: ~`"@{path}".slice(0, -4) + 'png\''`;
	.no-svg & { background-image: url(@pngpath); }
}

// Opacity, for IE too!
.opacity (@opacity: 1) {
	@ieOpacity: (@opacity * 100); 
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{ieOpacity})"; 
	filter: ~"alpha(opacity=@{ieOpacity})"; 
	opacity: @opacity; 
}

//For creating semi-transparent backgrounds for IE8
.bg_fade(@hex, @fade) {
	background: @hex;
	background: fade(@hex, @fade);
	//IE8/7 support: Color is expressed in #AARRGGBB - alpha is hexidecimal also. must be using IE conditionals in body class
	@value: argb(fade(@hex, @fade));
	.lt-ie9& { 
		background:transparent;
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=~"@{value}",endColorstr=~"@{value}"); 
		zoom: 1;
	}
}
